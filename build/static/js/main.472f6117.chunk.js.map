{"version":3,"sources":["logo.svg","Components/etapa2.js","Components/etapa1.js","Components/etapa3.js","Components/final.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Etapa2","state","infoEnsino","valorInputCurso","valorInputEnsino","onChangeInputCurso","event","setState","target","value","onChangeInputEnsino","className","this","onChange","placeholder","onChenge","React","Component","Etapa1","dadosGerais","valorInputNome","valorInputIdade","valorInputEmail","onChangeInputNome","onChangeInputIdade","onChangeInputEmail","onSubmit","handleSubmit","handleChange","Etapa3","infoGeraisEnsino","valorInputGraduacao","onChangeInputGraduacao","Final","App","etapa","rendenizarEtapa","proximaEtapa","proxPagina","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.472f6117.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\"\r\n\r\nclass Etapa2 extends React.Component {\r\n    state = {\r\n        infoEnsino: [\r\n            {\r\n                valorInputCurso: \"\",\r\n                valorInputEnsino: \"\"\r\n            }\r\n\r\n                     ]\r\n            }\r\nonChangeInputCurso = event => {\r\n    this.setState({ valorInputCurso: event.target.value});\r\n};\r\n\r\nonChangeInputEnsino = event => {\r\n    this.setState({ valorInputEnsino: event.target.value});\r\n};\r\n\r\nrender() {\r\n    return(\r\n        <div className=\"container-etapa2\">\r\n            <h2>ETAPA 2 - INFORMAÇÕES DO ENSINO SUPERIOR</h2>\r\n            <p>5. Qual curso?</p>\r\n            <input \r\n            value={this.state.valorInputCurso}\r\n            onChange={this.onChangeInputCurso}\r\n            placeholder=\"\"\r\n            />\r\n            <p>6. Qual a unidade de ensino?</p>\r\n            <input \r\n            value={this.state.valorInputEnsino}\r\n            onChenge={this.onChangeInputEnsino}\r\n            placeholder=\"\"\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Etapa2;","import React from \"react\";\r\nimport Etapa2 from \"./etapa2\";\r\n\r\n\r\nclass Etapa1 extends React.Component {\r\n  \r\n    state = {\r\n       dadosGerais: [\r\n           {\r\n            valorInputNome: \"\",\r\n            valorInputIdade: \"\",\r\n            valorInputEmail:\"\" \r\n                                    }\r\n                    ]\r\n       \r\n            };\r\n\r\n onChangeInputNome = event => {\r\n     this.setState({valorInputNome: event.target.value}); \r\n };\r\n \r\n onChangeInputIdade = event => {\r\n     this.setState({valorInputIdade: event.target.value});\r\n };\r\n\r\n onChangeInputEmail = event => {\r\n     this.setState({valorInputEmail:event.target.value});\r\n };\r\n\r\n    render() {\r\n      return(\r\n  \r\n        <div className=\"container-etapa1\">\r\n          <h2>DADOS GERAIS</h2> \r\n           <p>1. Qual o seu nome?</p>\r\n                 <input \r\n            value={this.state.valorInputNome}\r\n            onChange={this.onChangeInputNome}\r\n            placeholder=\"\"\r\n            />\r\n            <p>2. Qual sua idade?</p>\r\n                 <input \r\n             value={this.state.valorInputIdade}\r\n             onChange={this.onChangeInputIdade}\r\n             placeholder= \"\"  \r\n            />\r\n            \r\n            <p>3. Qual seu email?</p>\r\n                <input \r\n            value={this.state.valorInputEmail}\r\n            onChange={this.state.valorInputEmail}\r\n            placeholder=\"\"\r\n            />\r\n            <p>4. Qual a sua escolaridade ?</p>\r\n            <form onSubmit={this.handleSubmit}>\r\n           <select value={this.state.value} onChange={this.handleChange}>\r\n            <option value=\"\">Ensino médio incompleto</option>\r\n            <option value=\"\">Ensino médio completo</option>\r\n            <option value=\"\">Ensino superior incompleto</option>\r\n            <option value=\"\">Ensino superior completo</option>\r\n          </select>\r\n        </form>\r\n           \r\n\r\n           \r\n        </div>\r\n\r\n        );\r\n    };\r\n}\r\n\r\n\r\n    export default Etapa1;","import React from \"react\"\r\nimport Etapa2 from \"./etapa2\";\r\n\r\nclass Etapa3 extends React.Component {\r\n    state = {\r\n        infoGeraisEnsino: [\r\n            {\r\n                valorInputGraduacao: \"\",\r\n    }\r\n        ]\r\n    }\r\nonChangeInputGraduacao = event => {\r\n    this.setState({ valorInputGraduacao: event.target.value})\r\n}\r\n\r\n\r\nrender() {\r\n    return(\r\n        <div className=\"container-etapa3\">\r\n        <h2>ETAPA 3 - INFORMAÇÕES GERAIS DE ENSINO</h2>\r\n        <p>7. Por que você não terminou um curso de graduação?</p>\r\n        <input \r\n            value={this.state.valorInputGraduacao}\r\n            onChange={this.onChangeInputGraduacao}\r\n            placeholder=\"\"\r\n            />\r\n         <p>8. Você fez algum curso complementar?</p>\r\n         <form onSubmit={this.handleSubmit}>\r\n           <select value={this.state.value} onChange={this.handleChange}>\r\n            <option value=\"\">Nenhum</option>\r\n            <option value=\"\">Curso técnico </option>\r\n            <option value=\"\">Curso de inglês</option>\r\n          </select>\r\n        </form>\r\n    </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Etapa3","import React from \"react\"\r\n\r\nclass Final extends React.Component {\r\n    render() {\r\n    return(\r\n        <div>\r\n        <h1>O FORMULÁRIO ACABOU</h1>\r\n\r\n        <h2>Muito obrigado por participar! Entraremos em contato!</h2>\r\n        </div>\r\n      \r\n    );\r\n   \r\n        \r\n\r\n    }      \r\n};\r\n\r\nexport default Final;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Etapa1 from './Components/etapa1.js'\nimport Etapa2 from './Components/etapa2.js'\nimport Etapa3 from './Components/etapa3.js'\nimport Final from './Components/final.js'\n\n\nclass App extends React.Component {\n\n    state = {\n      etapa: 1,\n    };\n    \n      rendenizarEtapa = () => {\n        switch (this.state.etapa) {\n          case 1:\n            return <Etapa1 />;\n          case 2:\n            return <Etapa2 />;\n          case 3:\n            return <Etapa3 />;\n          case 4:\n            return <Final />;\n           \n            default:  \n        }\n      }\n  proximaEtapa = () => {\n    const paginaAtual = this.state.etapa;\n    const proxPagina = paginaAtual + 1 \n\n      this.setState({etapa: proxPagina})\n  }  \n  render()\n     {  \n  return (\n    <div>\n    {this.rendenizarEtapa()}\n    <button className=\"botao\" onClick={this.proximaEtapa} >Próxima Etapa</button>\n    </div>\n  );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}